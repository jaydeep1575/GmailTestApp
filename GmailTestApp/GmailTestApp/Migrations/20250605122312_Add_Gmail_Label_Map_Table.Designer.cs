// <auto-generated />
using System;
using GmailTestApp.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GmailTestApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250605122312_Add_Gmail_Label_Map_Table")]
    partial class Add_Gmail_Label_Map_Table
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GmailTestApp.Model.Gmail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gmails");
                });

            modelBuilder.Entity("GmailTestApp.Model.GmailLabelMap", b =>
                {
                    b.Property<int>("GmailId")
                        .HasColumnType("int");

                    b.Property<int>("LabelId")
                        .HasColumnType("int");

                    b.HasKey("GmailId", "LabelId");

                    b.HasIndex("LabelId");

                    b.ToTable("GmailLabelMap");
                });

            modelBuilder.Entity("GmailTestApp.Model.Label", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ColorCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Labels");
                });

            modelBuilder.Entity("GmailTestApp.Model.GmailLabelMap", b =>
                {
                    b.HasOne("GmailTestApp.Model.Gmail", "Gmail")
                        .WithMany("GmailLabelMaps")
                        .HasForeignKey("GmailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GmailTestApp.Model.Label", "Label")
                        .WithMany("GmailLabelMaps")
                        .HasForeignKey("LabelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gmail");

                    b.Navigation("Label");
                });

            modelBuilder.Entity("GmailTestApp.Model.Gmail", b =>
                {
                    b.Navigation("GmailLabelMaps");
                });

            modelBuilder.Entity("GmailTestApp.Model.Label", b =>
                {
                    b.Navigation("GmailLabelMaps");
                });
#pragma warning restore 612, 618
        }
    }
}
